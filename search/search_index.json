{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome","title":"Welcome!","text":"<p><code>PhoronixSensorGraphs</code> helps you to easily visualize the sensor readings recorded by the Phoronix Test Suite (PTS) during a stress test.</p> <p>PTS itself comes with a result viewer, that you can start from the terminal using <code>phoronix-test-suite start-result-viewer</code>. There is, however, an issue with the viewer: all the data points from the sensor are not plotted in the graphs.</p> <p>This class reads the data recorded by PTS and plots it using <code>matplotlib</code>, making sure to include each and every data point.</p> <p>Hop on to Quickstart from the left panel. The repo also comes with a <code>main.py</code> file so that you can directly edit and run it without much fuss.</p>"},{"location":"documentation/","title":"Documentation","text":""},{"location":"documentation/#PhoronixSensorGraphs.PhoronixSensorGraphs","title":"<code>PhoronixSensorGraphs</code>","text":"<p>This class allows you plot the sensor data recorded by Phoronix Test Suite (PTS) during a stress run. Requires Python &gt;= 3.10.</p> <p>Attributes:</p> Name Type Description <code>res_file</code> <code>str</code> <code>res_path</code> <code>str</code> <code>plt_layout</code> <code>str | tuple</code>"},{"location":"documentation/#PhoronixSensorGraphs.PhoronixSensorGraphs.res_path","title":"<code>res_path</code>  <code>writable</code> <code>property</code>","text":"<p>The path to the result directory.</p> <p>Type: <code>str</code></p> <p>Default: <code>\"/home/&lt;user_name&gt;/.phoronix-test-suite/test-results/\"</code></p> <p>You can set a custom result directory using</p> <pre><code>psg.res_path = \"/path/to/result/directory\"\n</code></pre> <p>The result directory must have the following structure:</p> <pre><code>psg.res_path (i.e. the result directory)\n |\n +--- &lt;Test_result_name&gt;\n       |\n       +--- psg.res_file (i.e. the result file)\n</code></pre> <p>The program will throw an error if this directory structure is violated.</p>"},{"location":"documentation/#PhoronixSensorGraphs.PhoronixSensorGraphs.res_file","title":"<code>res_file</code>  <code>writable</code> <code>property</code>","text":"<p>The file name for the data file.</p> <p>Type: <code>str</code></p> <p>Default: <code>\"composite.xml\"</code></p> <p>File type must be <code>.xml</code>.</p> <p>You can set a custom file name for the data file using</p> <pre><code>psg.res_file = \"custom_filename.xml\"\n</code></pre>"},{"location":"documentation/#PhoronixSensorGraphs.PhoronixSensorGraphs.plt_layout","title":"<code>plt_layout</code>  <code>writable</code> <code>property</code>","text":"<p>The layout of the subplots.</p> <p>Type: <code>str</code> or <code>tuple</code></p> <p>Default: <code>\"auto\"</code></p> <p>Set a custom layout of the subplots using:</p> <pre><code>psg.plt_layout = (nrows, ncols)\n</code></pre> <p>where <code>nrows</code> is the number of rows, and <code>ncols</code> is the number of columns. Note that <code>nrows</code>*<code>ncols</code> MUST be &gt;= no. of subplots expected. Without this, the program will throw an error. The default new_filename is \"auto\", which allows the program to automatically determine the best layout.</p>"},{"location":"documentation/#PhoronixSensorGraphs.PhoronixSensorGraphs.plot_sensor_data","title":"<code>plot_sensor_data(res_name: str, sensors: tuple, cpu_usage_summary_only: bool = True, cpu_usage_separate_plots: bool = False)</code>","text":"<p>Plots the sensor data recorded by Phoronix Test Suite.</p> <p>Does NOT support the sensors <code>cpu.freq</code>, <code>cpu.peak-freq</code> and <code>gpu.freq</code> as of now. See this issue: https://github.com/phoronix-test-suite/phoronix-test-suite/issues/680</p> <p>Parameters:</p> Name Type Description Default <code>res_name</code> <code>str</code> <p>The test result name.</p> required <code>sensors</code> <code>tuple</code> <p>The sensors to be potted; eg. <code>('cpu.temp', 'gpu.usage')</code>. Note that some sensors, like cpu.usage, have entries for each core as well as a summary. By default, only the summary is plotted. To plot data for each and every core, see <code>cpu_usage_summary_only</code> and <code>cpu_usage_separate_plots</code> parameters.</p> required <code>cpu_usage_summary_only</code> <code>bool, optional</code> <p>Used only if <code>sensors</code> contains <code>cpu.usage</code>. If <code>True</code>, only the CPU Usage Summary data will be plotted, otherwise per-CPU usage data will also be plotted.</p> <code>True</code> <code>cpu_usage_separate_plots</code> <code>bool, optional</code> <p>Used only if <code>cpu_usage_summary_only = True</code>. If set to <code>True</code>, CPU Usage data for each CPU core/thread will be plotted in separate sub-plots.</p> <code>False</code>"},{"location":"quick_usage_guide/","title":"Quickstart","text":""},{"location":"quick_usage_guide/#installation","title":"Installation","text":"<p>1. Clone the repository:</p> <pre><code># Get the latest tag (https://stackoverflow.com/a/67404585/8387076)\ntag=$( curl --silent  \"https://api.github.com/repos/WrichikBasu/PhoronixSensorGraphs/tags\" | jq -r '.[0].name' )\n\n# Clone the specific tag (https://stackoverflow.com/a/65397613/8387076)\ngit clone --depth 1 --branch $tag git@github.com:WrichikBasu/PhoronixSensorGraphs.git\n\ncd PhoronixSensorGraphs/ \n</code></pre> <p>2. Install/upgrade the libraries required:</p> <pre><code>python3 -m pip install --upgrade -r requirements.txt\n</code></pre>"},{"location":"quick_usage_guide/#usage","title":"Usage","text":"<p>If you are on a Linux system, and have executed a stress test as a non-root user, you can quickly get the plots using:</p> <pre><code>&gt;&gt;&gt; from PhoronixSensorGraphs import *\n&gt;&gt;&gt; psg = PhoronixSensorGraphs()\n&gt;&gt;&gt; psg.plot_sensor_data('Test_result_name', ('cpu.temp', 'gpu.temp', 'cpu.usage',  'gpu.usage', 'memory.usage', 'sys.temp'))\n</code></pre> <p>Don't forget to replace <code>Test_result_name</code> with the name of the stress test.</p>"}]}